function update_dotfiles() {
  echo "Updating ~/.bash_profile..."
  if [ -f ~/.bashrc ]; then
    echo "Loading ~/.bashrc"
    source ~/.bashrc
  elif [ -f ~/.bash_profile ]; then
    echo "Loading ~/.bash_profile"
    source ~/.bash_profile
  fi

  create_dot_vim
  update_symlinks
  reload_bash_profile
}

function create_dot_vim() {
  if [ ! -d ~/.vim ]; then
    echo "Creating ~/.vim"
    mkdir ~/.vim
  fi

  if [ ! -d ~/.vim/colors ]; then
    echo "Creating ~/.vim/colors"
    mkdir ~/.vim/colors
  fi
}

function update_symlinks(){
  echo "Linking configuration files to ~/"
  mkdir -p ~/.config/git
  ln -nfs ~/.dotfiles/git/gitignore ~/.config/git/ignore

  ln -nfs ~/.dotfiles/git/gitconfig ~/.gitconfig
  ln -nfs ~/.dotfiles/git/githelpers ~/.githelpers
  ln -nfs ~/.dotfiles/git/git_commit_template ~/.gitmessage
  ln -nfs ~/.dotfiles/postgres/psqlrc ~/.psqlrc

  # Vim
  ln -nfs ~/.dotfiles/vim/vimrc ~/.vimrc
  ln -nfs ~/.dotfiles/vim/vim.plugins ~/.vim.plugins
  ln -nfs ~/.dotfiles/vim/colorschemes/alex_ir_black.vim ~/.vim/colors/

  # VSCode
  ln -nfs ~/.dotfiles/vscode/vimrc ~/.vscodevimrc

  # neovim
  ln -nfs ~/.dotfiles/vim/nvimrc ~/.config/nvim/init.vim
  mkdir -p ~/.config/nvim/colors/
  ln -nfs ~/.dotfiles/vim/colorschemes/alex_ir_black.vim ~/.config/nvim/colors/

  mkdir -p ~/.vim/after/
  ln -nfs ~/.dotfiles/vim/snippets ~/.vim/after/

  ln -nfs ~/.dotfiles/tmux/tmux.conf ~/.tmux.conf
  ln -nfs ~/.dotfiles/tmux/tmux.versioning.conf ~/.tmux.versioning.conf

  ln -nfs ~/.dotfiles/rc_files/pryrc ~/.pryrc
  ln -nfs ~/.dotfiles/rc_files/irbrc ~/.irbrc
  ln -nfs ~/.dotfiles/rc_files/amazing_print ~/.aprc
  ln -nfs ~/.dotfiles/ag/ignore ~/.ignore
  ln -nfs ~/.dotfiles/ag/ignore ~/.agignore

  mkdir -p ~/.config/alacritty/
  rm -f ~/.config/alacritty/alacritty.yml
  ln -nfs ~/.dotfiles/alacritty/alacritty.yml ~/.alacritty.yml

  # We don't use this directive anymore. We leave blank, which will default
  # to $HOME/.config/git/ignore.
  #
  # git config --global core.excludesfile ~/.gitignore
}

function reload_bash_profile() {
  # Loads .dotfiles
  if [ -f ~/.bashrc ]; then
    echo "Linking ~/.bashrc"
    if ! grep -q "source ~/.dotfiles/bashrc_source" ~/.bashrc; then
      echo 'source ~/.dotfiles/bashrc_source' >> ~/.bashrc
    fi

    source ~/.bashrc
  elif [ -f ~/.bash_profile ]; then
    echo "Linking ~/.bashrc"
    if ! grep -q "source ~/.dotfiles/bashrc_source" ~/.bash_profile; then
      echo 'source ~/.dotfiles/bashrc_source' >> ~/.bash_profile
    fi

    source ~/.bash_profile
  else
    echo "Error installing bashrc_source: Neither .bashrc nor .bash_profile found."
  fi
}

export DOTFILES=~/.dotfiles
source $DOTFILES/bash/bash_profile
source $DOTFILES/bash/prompt_config
source $DOTFILES/bash/env
source $DOTFILES/bash/aliases
source $DOTFILES/bash/aliases_env_specific
source $DOTFILES/bash/autocomplete/autocomplete
source $DOTFILES/bash/dirmarks # This is neat

# FZF
export FZF_DEFAULT_COMMAND='rg --files --follow --ignore-vcs --hidden --sortr modified -g "!{.jest-cache*,*/node_modules/*,node_modules/*,.git/*}"'
export FZF_DEFAULT_OPTS='-i'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
# Shows `tree` as preview for the current directory
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"
# Loads FZF
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# BASH HISTORY
export HISTCONTROL=ignoreboth
# If we're using tmux, use a specific history file for that session.
[[ -n "${TMUX+set}" ]] && export TMUX_SESSION=$(tmux display-message -p "#S")
if [[ $TMUX_SESSION ]]; then
  export HISTFILE=$HOME/.bash_history_tmux_${TMUX_SESSION}
  touch $HISTFILE
  shopt -s histappend
  # this makes history flush out to file after every command. Without it,
  # history is only flushed when the session is closed.
  export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -n"
fi
export USER=`whoami`
export BASH_SILENCE_DEPRECATION_WARNING=1

export PATH=~/.dotfiles/bin:$PATH
export PATH=~/.dotfiles/bin/macos_only:$PATH

# MacOS only
if [[ "$OSTYPE" == "darwin"* ]]; then
  export PATH="/opt/homebrew/bin:$PATH"
fi

# Node - if nodenv exists, eval it
nodenv --version &> /dev/null
if [[ $? -eq 0 ]]; then
  eval "$(nodenv init -)"
fi

# disable XON/XOFF so I can use ctrl+s with `history`
[[ $- == *i* ]] && stty -ixon
[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

# We need some programs to be installed for this environment to work as expected
check_missing_binary 'bc'
check_missing_binary 'fzf'
check_missing_binary 'jq'
