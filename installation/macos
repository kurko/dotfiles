#! /bin/bash

xcode-select --install &>2

if command -v brew >/dev/null 2>&1; then
  echo "Homebrew already installed!"
else
  echo "Homebrew... "
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.bash_profile
  eval "$(/opt/homebrew/bin/brew shellenv)"
  brew update
  echo "done!"
fi
echo ""

INSTALLED_PACKAGE_LIST=$(brew list -1 --formula)
BREW_CASK_LIST=$(brew list -1 --cask)

function brew_install_if_absent() {
  echo -n "> $1: "
  export HOMEBREW_NO_AUTO_UPDATE=1
  echo $INSTALLED_PACKAGE_LIST | grep $1 &> /dev/null

  if [[ $? -eq 1 ]]
  then
    echo "brew installing... "
    brew install $1;
    echo "done."
    return 0
  else
    echo "already installed."
    return 1
  fi
}

function brew_cask_install_if_absent() {
  echo -n "> $1: "
  export HOMEBREW_NO_AUTO_UPDATE=1
  echo $BREW_CASK_LIST | grep $1 &> /dev/null

  if [[ $? -eq 1 ]]
  then
    echo "brew installing... "
    brew install cask $1
    echo "done."
    return 0
  else
    echo "already installed."
    return 1
  fi
}

function install_macos() {
  echo "> Installing applications..."

  printf "> rbenv: "
  rbenv --version &> /dev/null
  if [[ $? -eq 0 ]]
  then
    printf "already installed.\n"
  else
    echo "installing with ruby-build... "
    git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
    echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
    echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
    # For some reason, latest versions of Rub will install gems in $HOME/.gems and
    # that breaks how Rbenv expects it to work (with gems referenced from inside
    # Rbenv's directory).
    #
    # There's a drawback with this approach is that now gems  are shared among
    # different Ruby versions and that some times breaks (e.g "incompatible version"),
    # but for now it's fine locally. I need to find a better solution later.
    echo 'export GEM_HOME="$\(ruby -e '"'"'puts Gem.user_dir'"'"')"' >> ~/.bash_profile
    echo 'export PATH="$GEM_HOME/bin:$PATH"' >> ~/.bash_profile
    source ~/.bash_profile
    type rbenv
    git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
    echo "done!\n"
    LAST_RUBY="$(rbenv install -l | grep -v - | tail -1)"
    echo "> Ruby ${LAST_RUBY}: installing... "
    rbenv install $LAST_RUBY
    rbenv global $LAST_RUBY
    echo "done!\n"
    echo "> bundler: installing... "
    gem install bundler
    echo "done!\n"
    ruby -v
  fi

  brew_cask_install_if_absent rectangle
  brew_cask_install_if_absent slack
  brew_cask_install_if_absent 1password
  brew_install_if_absent meetingbar
  brew_install_if_absent wget
  brew_install_if_absent curl
  brew_install_if_absent tree
  brew_install_if_absent tmux
  brew_install_if_absent the_silver_searcher
  brew_install_if_absent rg

  brew_install_if_absent postgresql
  if [[ $? -eq 0 ]]; then
    brew services restart postgresql
  fi
  brew_install_if_absent libpq # For Postgres

  brew_install_if_absent redis
  brew services restart redis
  brew_install_if_absent bash-completion
  brew_install_if_absent coreutils
  brew_install_if_absent hub
  if [[ "$(which vim)" == "/usr/bin/vim" ]]; then
    brew install vim
  else
    echo "> vim: already installed."
  fi
  brew_install_if_absent imagemagick@6 && brew link imagemagick@6
  brew_install_if_absent pkg-config && brew unlink pkgconfig && brew link pkgconfig
  brew_install_if_absent mosh
  brew_install_if_absent ctags
  brew_install_if_absent fzf
  brew_install_if_absent fd
  $(brew --prefix)/opt/fzf/install --completion --key-bindings --no-bash --no-zsh --no-fish

  EVAL_NODENV=0
  nodenv --version &> /dev/null
  if [[ $? -ne 0 ]]; then EVAL_NODENV=1; fi
  brew_install_if_absent nodenv
  if [[ $EVAL_NODENV -eq 1 ]]; then
    eval "$(nodenv init -)"
    echo "Running: eval \"\$(nodenv init -)\""
    nodenv install 14.0.0
  fi


  brew_install_if_absent yarn
  brew_install_if_absent jq
  brew_install_if_absent gh
  # Like cat, but with syntax highlighting
  brew_install_if_absent bat

  # Rustup (used to install Alacritty)
  source $DOTFILES/installation/macos_features/rustup
  source $DOTFILES/installation/macos_features/alacritty
  source $DOTFILES/installation/macos_features/dock

  # casks
  brew tap homebrew/cask-fonts
  brew tap homebrew/cask-versions
  brew_cask_install_if_absent font-sf-pro
  brew_cask_install_if_absent font-sf-compact
  brew_cask_install_if_absent font-sf-mono
  brew_cask_install_if_absent font-new-york
  brew_cask_install_if_absent font-hack
  brew_cask_install_if_absent font-inconsolata
  brew_cask_install_if_absent fliqlo
  brew_cask_install_if_absent zoom
  brew_cask_install_if_absent alfred4
  brew_cask_install_if_absent telegram
  brew_cask_install_if_absent firefox-developer-edition
  brew_cask_install_if_absent google-chrome
  brew_cask_install_if_absent sync

  # To hide items in the menubar
  if [ ! -d "/Applications/Vanilla.app" ]; then
    brew_cask_install_if_absent vanilla
  fi

  # Mac App Store
  brew_install_if_absent mas
  # Installing Things 3
  if [ ! -d "/Applications/Things3.app" ]; then
    mas install 904280696
  fi

  # Timery
  if [ ! -d "/Applications/Timery.app" ]; then
    mas install 1425368544
  fi

  mas install 1568262835 # Super Agent for Safari
}
